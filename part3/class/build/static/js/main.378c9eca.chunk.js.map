{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNote","length","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.378c9eca.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","import axios from 'axios'\n\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to servert',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if(message === null){\n        return null\n    }\n\n    return (\n    <div className='error'>\n        {message}\n    </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n      </div> \n    )\n}\n\nexport default Footer","import React, {useState, useEffect} from 'react'\n\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        console.log('effect')\n        noteService\n            .getAll()\n            .then(initialNote => {\n                setNotes(initialNote)\n            })\n    }, [])\n\n    console.log(`render ${notes.length} notes`)\n\n    const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        }\n\n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote))\n                setNewNote('')\n            })\n\n        //setNotes(notes.concat(noteObject))\n        //setNewNote('')\n    }\n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const toggleImportanceOf = id => {\n        console.log(\n            `importance of ${id} needs to be toggled`\n        )\n\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from the server`\n                )\n                setTimeout(() => {\n                   setErrorMessage(null) \n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n    const rows = () => notesToShow.map(note => \n        <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n        />\n    )\n    return (\n        <div>\n            <h1>Notes</h1>\n\n            <Notification message={errorMessage} />\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input \n                    value={newNote}\n                    onChange={handleNoteChange}\n                    placeholder='insert note'\n                />\n                <button type='submit'>save</button>\n            </form>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport './index.css'\n\n/*\nconst notes = [\n    {\n        id: 1,\n        content: 'HTML is easy',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true\n    },\n    {\n        id: 2,\n        content: 'Browser can execute only Javascript',\n        date: '2019-05-30T18:39:34.091Z',\n        important: false\n    },\n    {\n        id: 3,\n        content: 'GET and POST are the most important methods of HTTP protocol',\n        date: '2019-05-30T19:20:14.298Z',\n        important: true\n    }\n]\n\n*/\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}